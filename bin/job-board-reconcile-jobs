#!/usr/bin/env ruby
# frozen_string_literal: true

libdir = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(libdir) unless $LOAD_PATH.include?(libdir)

require 'json'
require 'time'

require_relative '../lib/job_board'

$stdout.sync = true
$stderr.sync = true

def main(argv: ARGV)
  if argv.include?('--once')
    $stdout.puts JSON.pretty_generate(
      JobBoard::JobQueueReconciler.new.reconcile!
    )
    return 0
  end

  reconciler = JobBoard::JobQueueReconciler.new
  JobBoard.logger.info('starting reconciliation loop')
  loop do
    stats = reconciler.reconcile!
    stats.fetch(:sites, {}).each do |site_name, site|
      JobBoard.logger.info(
        'reconciled',
        site: site_name,
        reclaimed: site.fetch(:reclaimed, '???'),
        reclaimed_ids: site.fetch(
          :reclaimed_ids, [:notset]
        ).map(&:to_s).join(',')
      )
      site.fetch(:queues, {}).each do |queue_name, queue|
        JobBoard.logger.info(
          'queue stats',
          site: site_name, queue: queue_name,
          queued: queue[:queued], claimed: queue[:claimed]
        )
      end
    end

    JobBoard.redis_pool.with do |conn|
      conn.set(
        'latest-stats',
        JSON.dump(
          stats.merge(generated: Time.now.utc.iso8601)
        )
      )
    end
    sleep(Integer(ENV['JOB_BOARD_RECONCILIATION_SLEEP_INTERVAL'] || 1))
  end

  0
end

exit main
